// NOTE: The file name is used by all clients, so renaming the file requires the updates on all client code base.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: command.proto

package protocol

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type JoinerState int32

const (
	JoinerState_NORMAL JoinerState = 0
	JoinerState_MUTE   JoinerState = 1
	JoinerState_KICK   JoinerState = 2
)

// Enum value maps for JoinerState.
var (
	JoinerState_name = map[int32]string{
		0: "NORMAL",
		1: "MUTE",
		2: "KICK",
	}
	JoinerState_value = map[string]int32{
		"NORMAL": 0,
		"MUTE":   1,
		"KICK":   2,
	}
)

func (x JoinerState) Enum() *JoinerState {
	p := new(JoinerState)
	*p = x
	return p
}

func (x JoinerState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (JoinerState) Descriptor() protoreflect.EnumDescriptor {
	return file_command_proto_enumTypes[0].Descriptor()
}

func (JoinerState) Type() protoreflect.EnumType {
	return &file_command_proto_enumTypes[0]
}

func (x JoinerState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use JoinerState.Descriptor instead.
func (JoinerState) EnumDescriptor() ([]byte, []int) {
	return file_command_proto_rawDescGZIP(), []int{0}
}

type Error_ErrorCode int32

const (
	Error_FEED_NOT_EXIST        Error_ErrorCode = 0
	Error_WRONG_FEED_INSTANCE   Error_ErrorCode = 2
	Error_MISSING_STATE         Error_ErrorCode = 3
	Error_ALREADY_IN_OTHER_FEED Error_ErrorCode = 4
	Error_INVALID_COMMAND       Error_ErrorCode = 5
	Error_NOT_SUPPORTED_YET     Error_ErrorCode = 6
	Error_PROXY_ERROR           Error_ErrorCode = 7
	Error_FEED_INFO_DB_ERROR    Error_ErrorCode = 8
	Error_UNAUTHORIZED          Error_ErrorCode = 9
	Error_NOT_SUBSCRIBED_FEED   Error_ErrorCode = 10
	Error_MISSING_FIELDS        Error_ErrorCode = 11
	Error_NOT_JOIN_FEED         Error_ErrorCode = 12
	Error_INTERNODE_TIMEOUT     Error_ErrorCode = 13
	Error_REQUEST_TIMEOUT       Error_ErrorCode = 14
)

// Enum value maps for Error_ErrorCode.
var (
	Error_ErrorCode_name = map[int32]string{
		0:  "FEED_NOT_EXIST",
		2:  "WRONG_FEED_INSTANCE",
		3:  "MISSING_STATE",
		4:  "ALREADY_IN_OTHER_FEED",
		5:  "INVALID_COMMAND",
		6:  "NOT_SUPPORTED_YET",
		7:  "PROXY_ERROR",
		8:  "FEED_INFO_DB_ERROR",
		9:  "UNAUTHORIZED",
		10: "NOT_SUBSCRIBED_FEED",
		11: "MISSING_FIELDS",
		12: "NOT_JOIN_FEED",
		13: "INTERNODE_TIMEOUT",
		14: "REQUEST_TIMEOUT",
	}
	Error_ErrorCode_value = map[string]int32{
		"FEED_NOT_EXIST":        0,
		"WRONG_FEED_INSTANCE":   2,
		"MISSING_STATE":         3,
		"ALREADY_IN_OTHER_FEED": 4,
		"INVALID_COMMAND":       5,
		"NOT_SUPPORTED_YET":     6,
		"PROXY_ERROR":           7,
		"FEED_INFO_DB_ERROR":    8,
		"UNAUTHORIZED":          9,
		"NOT_SUBSCRIBED_FEED":   10,
		"MISSING_FIELDS":        11,
		"NOT_JOIN_FEED":         12,
		"INTERNODE_TIMEOUT":     13,
		"REQUEST_TIMEOUT":       14,
	}
)

func (x Error_ErrorCode) Enum() *Error_ErrorCode {
	p := new(Error_ErrorCode)
	*p = x
	return p
}

func (x Error_ErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Error_ErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_command_proto_enumTypes[1].Descriptor()
}

func (Error_ErrorCode) Type() protoreflect.EnumType {
	return &file_command_proto_enumTypes[1]
}

func (x Error_ErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Error_ErrorCode.Descriptor instead.
func (Error_ErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_command_proto_rawDescGZIP(), []int{0, 0}
}

type Command_MethodType int32

const (
	Command_CONNECT     Command_MethodType = 0
	Command_SUBSCRIBE   Command_MethodType = 1
	Command_UNSUBSCRIBE Command_MethodType = 2
	Command_PUBLISH     Command_MethodType = 3
	Command_JOIN        Command_MethodType = 4
	Command_LEAVE       Command_MethodType = 5
	Command_PING        Command_MethodType = 6
	Command_PRESENCE    Command_MethodType = 7 // update presence
	Command_FEED_INFO   Command_MethodType = 8 // get feed info
	Command_DISCONNECT  Command_MethodType = 9
	Command_DELETE_FEED Command_MethodType = 10 // used by avatar server internally.
	Command_KICK        Command_MethodType = 11
	Command_MODERATOR   Command_MethodType = 12
)

// Enum value maps for Command_MethodType.
var (
	Command_MethodType_name = map[int32]string{
		0:  "CONNECT",
		1:  "SUBSCRIBE",
		2:  "UNSUBSCRIBE",
		3:  "PUBLISH",
		4:  "JOIN",
		5:  "LEAVE",
		6:  "PING",
		7:  "PRESENCE",
		8:  "FEED_INFO",
		9:  "DISCONNECT",
		10: "DELETE_FEED",
		11: "KICK",
		12: "MODERATOR",
	}
	Command_MethodType_value = map[string]int32{
		"CONNECT":     0,
		"SUBSCRIBE":   1,
		"UNSUBSCRIBE": 2,
		"PUBLISH":     3,
		"JOIN":        4,
		"LEAVE":       5,
		"PING":        6,
		"PRESENCE":    7,
		"FEED_INFO":   8,
		"DISCONNECT":  9,
		"DELETE_FEED": 10,
		"KICK":        11,
		"MODERATOR":   12,
	}
)

func (x Command_MethodType) Enum() *Command_MethodType {
	p := new(Command_MethodType)
	*p = x
	return p
}

func (x Command_MethodType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Command_MethodType) Descriptor() protoreflect.EnumDescriptor {
	return file_command_proto_enumTypes[2].Descriptor()
}

func (Command_MethodType) Type() protoreflect.EnumType {
	return &file_command_proto_enumTypes[2]
}

func (x Command_MethodType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Command_MethodType.Descriptor instead.
func (Command_MethodType) EnumDescriptor() ([]byte, []int) {
	return file_command_proto_rawDescGZIP(), []int{2, 0}
}

type Push_PushType int32

const (
	Push_PUBLICATION     Push_PushType = 0
	Push_JOIN            Push_PushType = 1
	Push_LEAVE           Push_PushType = 2
	Push_SUBSCRIBE_ERROR Push_PushType = 3
	Push_PRESENCE        Push_PushType = 4
	Push_FEED_ERROR      Push_PushType = 5
)

// Enum value maps for Push_PushType.
var (
	Push_PushType_name = map[int32]string{
		0: "PUBLICATION",
		1: "JOIN",
		2: "LEAVE",
		3: "SUBSCRIBE_ERROR",
		4: "PRESENCE",
		5: "FEED_ERROR",
	}
	Push_PushType_value = map[string]int32{
		"PUBLICATION":     0,
		"JOIN":            1,
		"LEAVE":           2,
		"SUBSCRIBE_ERROR": 3,
		"PRESENCE":        4,
		"FEED_ERROR":      5,
	}
)

func (x Push_PushType) Enum() *Push_PushType {
	p := new(Push_PushType)
	*p = x
	return p
}

func (x Push_PushType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Push_PushType) Descriptor() protoreflect.EnumDescriptor {
	return file_command_proto_enumTypes[3].Descriptor()
}

func (Push_PushType) Type() protoreflect.EnumType {
	return &file_command_proto_enumTypes[3]
}

func (x Push_PushType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Push_PushType.Descriptor instead.
func (Push_PushType) EnumDescriptor() ([]byte, []int) {
	return file_command_proto_rawDescGZIP(), []int{4, 0}
}

type AudioData_Codec int32

const (
	AudioData_OPUS AudioData_Codec = 0
	AudioData_AAC  AudioData_Codec = 1
)

// Enum value maps for AudioData_Codec.
var (
	AudioData_Codec_name = map[int32]string{
		0: "OPUS",
		1: "AAC",
	}
	AudioData_Codec_value = map[string]int32{
		"OPUS": 0,
		"AAC":  1,
	}
)

func (x AudioData_Codec) Enum() *AudioData_Codec {
	p := new(AudioData_Codec)
	*p = x
	return p
}

func (x AudioData_Codec) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AudioData_Codec) Descriptor() protoreflect.EnumDescriptor {
	return file_command_proto_enumTypes[4].Descriptor()
}

func (AudioData_Codec) Type() protoreflect.EnumType {
	return &file_command_proto_enumTypes[4]
}

func (x AudioData_Codec) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AudioData_Codec.Descriptor instead.
func (AudioData_Codec) EnumDescriptor() ([]byte, []int) {
	return file_command_proto_rawDescGZIP(), []int{6, 0}
}

type Error struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      Error_ErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=Error_ErrorCode" json:"code,omitempty"`
	Message   string          `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Temporary bool            `protobuf:"varint,3,opt,name=temporary,proto3" json:"temporary,omitempty"`
}

func (x *Error) Reset() {
	*x = Error{}
	if protoimpl.UnsafeEnabled {
		mi := &file_command_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Error) ProtoMessage() {}

func (x *Error) ProtoReflect() protoreflect.Message {
	mi := &file_command_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Error.ProtoReflect.Descriptor instead.
func (*Error) Descriptor() ([]byte, []int) {
	return file_command_proto_rawDescGZIP(), []int{0}
}

func (x *Error) GetCode() Error_ErrorCode {
	if x != nil {
		return x.Code
	}
	return Error_FEED_NOT_EXIST
}

func (x *Error) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *Error) GetTemporary() bool {
	if x != nil {
		return x.Temporary
	}
	return false
}

type Feed struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account string `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	Kind    string `protobuf:"bytes,2,opt,name=kind,proto3" json:"kind,omitempty"`
	Key     []byte `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *Feed) Reset() {
	*x = Feed{}
	if protoimpl.UnsafeEnabled {
		mi := &file_command_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Feed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Feed) ProtoMessage() {}

func (x *Feed) ProtoReflect() protoreflect.Message {
	mi := &file_command_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Feed.ProtoReflect.Descriptor instead.
func (*Feed) Descriptor() ([]byte, []int) {
	return file_command_proto_rawDescGZIP(), []int{1}
}

func (x *Feed) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *Feed) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *Feed) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

type Command struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// seq id
	Id          uint32              `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Method      Command_MethodType  `protobuf:"varint,2,opt,name=method,proto3,enum=Command_MethodType" json:"method,omitempty"`
	Feed        *Feed               `protobuf:"bytes,3,opt,name=feed,proto3" json:"feed,omitempty"`
	Connect     *ConnectRequest     `protobuf:"bytes,4,opt,name=connect,proto3" json:"connect,omitempty"`
	Subscribe   *SubscribeRequest   `protobuf:"bytes,5,opt,name=subscribe,proto3" json:"subscribe,omitempty"`
	Unsubscribe *UnsubscribeRequest `protobuf:"bytes,6,opt,name=unsubscribe,proto3" json:"unsubscribe,omitempty"`
	Publish     *PublishRequest     `protobuf:"bytes,7,opt,name=publish,proto3" json:"publish,omitempty"`
	Join        *JoinRequest        `protobuf:"bytes,8,opt,name=join,proto3" json:"join,omitempty"`
	Leave       *LeaveRequest       `protobuf:"bytes,9,opt,name=leave,proto3" json:"leave,omitempty"`
	Disconnect  *DisconnectRequest  `protobuf:"bytes,10,opt,name=disconnect,proto3" json:"disconnect,omitempty"`
	Ping        *PingRequest        `protobuf:"bytes,11,opt,name=ping,proto3" json:"ping,omitempty"`
	Presence    *PresenceRequest    `protobuf:"bytes,12,opt,name=presence,proto3" json:"presence,omitempty"`
	FeedInfo    *FeedInfoRequest    `protobuf:"bytes,13,opt,name=feedInfo,proto3" json:"feedInfo,omitempty"`
	Kick        *KickRequest        `protobuf:"bytes,14,opt,name=kick,proto3" json:"kick,omitempty"`
	Moderator   *ModeratorRequest   `protobuf:"bytes,15,opt,name=moderator,proto3" json:"moderator,omitempty"`
}

func (x *Command) Reset() {
	*x = Command{}
	if protoimpl.UnsafeEnabled {
		mi := &file_command_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Command) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Command) ProtoMessage() {}

func (x *Command) ProtoReflect() protoreflect.Message {
	mi := &file_command_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Command.ProtoReflect.Descriptor instead.
func (*Command) Descriptor() ([]byte, []int) {
	return file_command_proto_rawDescGZIP(), []int{2}
}

func (x *Command) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Command) GetMethod() Command_MethodType {
	if x != nil {
		return x.Method
	}
	return Command_CONNECT
}

func (x *Command) GetFeed() *Feed {
	if x != nil {
		return x.Feed
	}
	return nil
}

func (x *Command) GetConnect() *ConnectRequest {
	if x != nil {
		return x.Connect
	}
	return nil
}

func (x *Command) GetSubscribe() *SubscribeRequest {
	if x != nil {
		return x.Subscribe
	}
	return nil
}

func (x *Command) GetUnsubscribe() *UnsubscribeRequest {
	if x != nil {
		return x.Unsubscribe
	}
	return nil
}

func (x *Command) GetPublish() *PublishRequest {
	if x != nil {
		return x.Publish
	}
	return nil
}

func (x *Command) GetJoin() *JoinRequest {
	if x != nil {
		return x.Join
	}
	return nil
}

func (x *Command) GetLeave() *LeaveRequest {
	if x != nil {
		return x.Leave
	}
	return nil
}

func (x *Command) GetDisconnect() *DisconnectRequest {
	if x != nil {
		return x.Disconnect
	}
	return nil
}

func (x *Command) GetPing() *PingRequest {
	if x != nil {
		return x.Ping
	}
	return nil
}

func (x *Command) GetPresence() *PresenceRequest {
	if x != nil {
		return x.Presence
	}
	return nil
}

func (x *Command) GetFeedInfo() *FeedInfoRequest {
	if x != nil {
		return x.FeedInfo
	}
	return nil
}

func (x *Command) GetKick() *KickRequest {
	if x != nil {
		return x.Kick
	}
	return nil
}

func (x *Command) GetModerator() *ModeratorRequest {
	if x != nil {
		return x.Moderator
	}
	return nil
}

type Reply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint32             `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Error       *Error             `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	Push        *Push              `protobuf:"bytes,4,opt,name=push,proto3" json:"push,omitempty"`
	Connect     *ConnectResult     `protobuf:"bytes,5,opt,name=connect,proto3" json:"connect,omitempty"`
	Subscribe   *SubscribeResult   `protobuf:"bytes,6,opt,name=subscribe,proto3" json:"subscribe,omitempty"`
	Unsubscribe *UnsubscribeResult `protobuf:"bytes,7,opt,name=unsubscribe,proto3" json:"unsubscribe,omitempty"`
	Publish     *PublishResult     `protobuf:"bytes,8,opt,name=publish,proto3" json:"publish,omitempty"`
	Join        *JoinResult        `protobuf:"bytes,9,opt,name=join,proto3" json:"join,omitempty"`
	Leave       *LeaveResult       `protobuf:"bytes,10,opt,name=leave,proto3" json:"leave,omitempty"`
	Disconnect  *DisconnectResult  `protobuf:"bytes,11,opt,name=disconnect,proto3" json:"disconnect,omitempty"`
	Ping        *PingResult        `protobuf:"bytes,12,opt,name=ping,proto3" json:"ping,omitempty"`
	Presence    *PresenceResult    `protobuf:"bytes,13,opt,name=presence,proto3" json:"presence,omitempty"`
	FeedInfo    *FeedInfoResult    `protobuf:"bytes,14,opt,name=feedInfo,proto3" json:"feedInfo,omitempty"`
	Kick        *KickResult        `protobuf:"bytes,15,opt,name=kick,proto3" json:"kick,omitempty"`
	Moderator   *ModeratorResult   `protobuf:"bytes,16,opt,name=moderator,proto3" json:"moderator,omitempty"`
}

func (x *Reply) Reset() {
	*x = Reply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_command_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Reply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Reply) ProtoMessage() {}

func (x *Reply) ProtoReflect() protoreflect.Message {
	mi := &file_command_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Reply.ProtoReflect.Descriptor instead.
func (*Reply) Descriptor() ([]byte, []int) {
	return file_command_proto_rawDescGZIP(), []int{3}
}

func (x *Reply) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Reply) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *Reply) GetPush() *Push {
	if x != nil {
		return x.Push
	}
	return nil
}

func (x *Reply) GetConnect() *ConnectResult {
	if x != nil {
		return x.Connect
	}
	return nil
}

func (x *Reply) GetSubscribe() *SubscribeResult {
	if x != nil {
		return x.Subscribe
	}
	return nil
}

func (x *Reply) GetUnsubscribe() *UnsubscribeResult {
	if x != nil {
		return x.Unsubscribe
	}
	return nil
}

func (x *Reply) GetPublish() *PublishResult {
	if x != nil {
		return x.Publish
	}
	return nil
}

func (x *Reply) GetJoin() *JoinResult {
	if x != nil {
		return x.Join
	}
	return nil
}

func (x *Reply) GetLeave() *LeaveResult {
	if x != nil {
		return x.Leave
	}
	return nil
}

func (x *Reply) GetDisconnect() *DisconnectResult {
	if x != nil {
		return x.Disconnect
	}
	return nil
}

func (x *Reply) GetPing() *PingResult {
	if x != nil {
		return x.Ping
	}
	return nil
}

func (x *Reply) GetPresence() *PresenceResult {
	if x != nil {
		return x.Presence
	}
	return nil
}

func (x *Reply) GetFeedInfo() *FeedInfoResult {
	if x != nil {
		return x.FeedInfo
	}
	return nil
}

func (x *Reply) GetKick() *KickResult {
	if x != nil {
		return x.Kick
	}
	return nil
}

func (x *Reply) GetModerator() *ModeratorResult {
	if x != nil {
		return x.Moderator
	}
	return nil
}

// Push can be sent to a client as part of Reply in case of bidirectional transport or
// without additional wrapping in case of unidirectional transports.
type Push struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type Push_PushType `protobuf:"varint,1,opt,name=type,proto3,enum=Push_PushType" json:"type,omitempty"`
	Feed *Feed         `protobuf:"bytes,2,opt,name=feed,proto3" json:"feed,omitempty"`
	// not using oneof here due to JSON interoperability concerns.
	Pub      *Publication `protobuf:"bytes,3,opt,name=pub,proto3" json:"pub,omitempty"`
	Join     *Join        `protobuf:"bytes,4,opt,name=join,proto3" json:"join,omitempty"`
	Leave    *Leave       `protobuf:"bytes,5,opt,name=leave,proto3" json:"leave,omitempty"`
	Presence *Presence    `protobuf:"bytes,6,opt,name=presence,proto3" json:"presence,omitempty"`
}

func (x *Push) Reset() {
	*x = Push{}
	if protoimpl.UnsafeEnabled {
		mi := &file_command_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Push) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Push) ProtoMessage() {}

func (x *Push) ProtoReflect() protoreflect.Message {
	mi := &file_command_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Push.ProtoReflect.Descriptor instead.
func (*Push) Descriptor() ([]byte, []int) {
	return file_command_proto_rawDescGZIP(), []int{4}
}

func (x *Push) GetType() Push_PushType {
	if x != nil {
		return x.Type
	}
	return Push_PUBLICATION
}

func (x *Push) GetFeed() *Feed {
	if x != nil {
		return x.Feed
	}
	return nil
}

func (x *Push) GetPub() *Publication {
	if x != nil {
		return x.Pub
	}
	return nil
}

func (x *Push) GetJoin() *Join {
	if x != nil {
		return x.Join
	}
	return nil
}

func (x *Push) GetLeave() *Leave {
	if x != nil {
		return x.Leave
	}
	return nil
}

func (x *Push) GetPresence() *Presence {
	if x != nil {
		return x.Presence
	}
	return nil
}

type ClientInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account string `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	// This field is unique.
	// An account may use multiple devices concurrently and each combination of (device, IP) is considered as a client.
	DeviceId string `protobuf:"bytes,2,opt,name=deviceId,proto3" json:"deviceId,omitempty"`
	ClientId uint32 `protobuf:"varint,3,opt,name=clientId,proto3" json:"clientId,omitempty"`
	IsBot    bool   `protobuf:"varint,4,opt,name=isBot,proto3" json:"isBot,omitempty"`
}

func (x *ClientInfo) Reset() {
	*x = ClientInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_command_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientInfo) ProtoMessage() {}

func (x *ClientInfo) ProtoReflect() protoreflect.Message {
	mi := &file_command_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientInfo.ProtoReflect.Descriptor instead.
func (*ClientInfo) Descriptor() ([]byte, []int) {
	return file_command_proto_rawDescGZIP(), []int{5}
}

func (x *ClientInfo) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *ClientInfo) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *ClientInfo) GetClientId() uint32 {
	if x != nil {
		return x.ClientId
	}
	return 0
}

func (x *ClientInfo) GetIsBot() bool {
	if x != nil {
		return x.IsBot
	}
	return false
}

type AudioData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Codec     AudioData_Codec `protobuf:"varint,1,opt,name=codec,proto3,enum=AudioData_Codec" json:"codec,omitempty"`
	AudioData [][]byte        `protobuf:"bytes,2,rep,name=audioData,proto3" json:"audioData,omitempty"`
}

func (x *AudioData) Reset() {
	*x = AudioData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_command_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AudioData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AudioData) ProtoMessage() {}

func (x *AudioData) ProtoReflect() protoreflect.Message {
	mi := &file_command_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AudioData.ProtoReflect.Descriptor instead.
func (*AudioData) Descriptor() ([]byte, []int) {
	return file_command_proto_rawDescGZIP(), []int{6}
}

func (x *AudioData) GetCodec() AudioData_Codec {
	if x != nil {
		return x.Codec
	}
	return AudioData_OPUS
}

func (x *AudioData) GetAudioData() [][]byte {
	if x != nil {
		return x.AudioData
	}
	return nil
}

type Publication struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp     int64       `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"` // in ms
	UnityData     [][]byte    `protobuf:"bytes,2,rep,name=unityData,proto3" json:"unityData,omitempty"`
	AudioData     *AudioData  `protobuf:"bytes,3,opt,name=audioData,proto3" json:"audioData,omitempty"`
	Info          *ClientInfo `protobuf:"bytes,4,opt,name=info,proto3" json:"info,omitempty"`
	AvatarCommand string      `protobuf:"bytes,5,opt,name=avatarCommand,proto3" json:"avatarCommand,omitempty"`
}

func (x *Publication) Reset() {
	*x = Publication{}
	if protoimpl.UnsafeEnabled {
		mi := &file_command_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Publication) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Publication) ProtoMessage() {}

func (x *Publication) ProtoReflect() protoreflect.Message {
	mi := &file_command_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Publication.ProtoReflect.Descriptor instead.
func (*Publication) Descriptor() ([]byte, []int) {
	return file_command_proto_rawDescGZIP(), []int{7}
}

func (x *Publication) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *Publication) GetUnityData() [][]byte {
	if x != nil {
		return x.UnityData
	}
	return nil
}

func (x *Publication) GetAudioData() *AudioData {
	if x != nil {
		return x.AudioData
	}
	return nil
}

func (x *Publication) GetInfo() *ClientInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *Publication) GetAvatarCommand() string {
	if x != nil {
		return x.AvatarCommand
	}
	return ""
}

type Join struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info     *ClientInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
	Presence *Presence   `protobuf:"bytes,2,opt,name=presence,proto3" json:"presence,omitempty"`
}

func (x *Join) Reset() {
	*x = Join{}
	if protoimpl.UnsafeEnabled {
		mi := &file_command_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Join) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Join) ProtoMessage() {}

func (x *Join) ProtoReflect() protoreflect.Message {
	mi := &file_command_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Join.ProtoReflect.Descriptor instead.
func (*Join) Descriptor() ([]byte, []int) {
	return file_command_proto_rawDescGZIP(), []int{8}
}

func (x *Join) GetInfo() *ClientInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *Join) GetPresence() *Presence {
	if x != nil {
		return x.Presence
	}
	return nil
}

type Leave struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *ClientInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *Leave) Reset() {
	*x = Leave{}
	if protoimpl.UnsafeEnabled {
		mi := &file_command_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Leave) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Leave) ProtoMessage() {}

func (x *Leave) ProtoReflect() protoreflect.Message {
	mi := &file_command_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Leave.ProtoReflect.Descriptor instead.
func (*Leave) Descriptor() ([]byte, []int) {
	return file_command_proto_rawDescGZIP(), []int{9}
}

func (x *Leave) GetInfo() *ClientInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type Unsubscribe struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code   uint32 `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Reason string `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"`
}

func (x *Unsubscribe) Reset() {
	*x = Unsubscribe{}
	if protoimpl.UnsafeEnabled {
		mi := &file_command_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Unsubscribe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Unsubscribe) ProtoMessage() {}

func (x *Unsubscribe) ProtoReflect() protoreflect.Message {
	mi := &file_command_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Unsubscribe.ProtoReflect.Descriptor instead.
func (*Unsubscribe) Descriptor() ([]byte, []int) {
	return file_command_proto_rawDescGZIP(), []int{10}
}

func (x *Unsubscribe) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *Unsubscribe) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type Subscribe struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Subscribe) Reset() {
	*x = Subscribe{}
	if protoimpl.UnsafeEnabled {
		mi := &file_command_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Subscribe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Subscribe) ProtoMessage() {}

func (x *Subscribe) ProtoReflect() protoreflect.Message {
	mi := &file_command_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Subscribe.ProtoReflect.Descriptor instead.
func (*Subscribe) Descriptor() ([]byte, []int) {
	return file_command_proto_rawDescGZIP(), []int{11}
}

type Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *Message) Reset() {
	*x = Message{}
	if protoimpl.UnsafeEnabled {
		mi := &file_command_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_command_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_command_proto_rawDescGZIP(), []int{12}
}

func (x *Message) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type Presence struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info                     *ClientInfo       `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
	AvatarUrl                string            `protobuf:"bytes,2,opt,name=avatarUrl,proto3" json:"avatarUrl,omitempty"`
	AvatarBackgroundImageUrl string            `protobuf:"bytes,3,opt,name=avatarBackgroundImageUrl,proto3" json:"avatarBackgroundImageUrl,omitempty"`
	AvatarForegroundImageUrl string            `protobuf:"bytes,4,opt,name=avatarForegroundImageUrl,proto3" json:"avatarForegroundImageUrl,omitempty"`
	Metadata                 []byte            `protobuf:"bytes,5,opt,name=metadata,proto3" json:"metadata,omitempty"`
	State                    JoinerState       `protobuf:"varint,6,opt,name=state,proto3,enum=JoinerState" json:"state,omitempty"`
	MoodKeys                 []string          `protobuf:"bytes,7,rep,name=moodKeys,proto3" json:"moodKeys,omitempty"`
	IdleAnimationKey         string            `protobuf:"bytes,8,opt,name=idleAnimationKey,proto3" json:"idleAnimationKey,omitempty"`
	IsCalling                bool              `protobuf:"varint,9,opt,name=isCalling,proto3" json:"isCalling,omitempty"`
	Assets                   map[string]string `protobuf:"bytes,10,rep,name=assets,proto3" json:"assets,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Presence) Reset() {
	*x = Presence{}
	if protoimpl.UnsafeEnabled {
		mi := &file_command_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Presence) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Presence) ProtoMessage() {}

func (x *Presence) ProtoReflect() protoreflect.Message {
	mi := &file_command_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Presence.ProtoReflect.Descriptor instead.
func (*Presence) Descriptor() ([]byte, []int) {
	return file_command_proto_rawDescGZIP(), []int{13}
}

func (x *Presence) GetInfo() *ClientInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *Presence) GetAvatarUrl() string {
	if x != nil {
		return x.AvatarUrl
	}
	return ""
}

func (x *Presence) GetAvatarBackgroundImageUrl() string {
	if x != nil {
		return x.AvatarBackgroundImageUrl
	}
	return ""
}

func (x *Presence) GetAvatarForegroundImageUrl() string {
	if x != nil {
		return x.AvatarForegroundImageUrl
	}
	return ""
}

func (x *Presence) GetMetadata() []byte {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Presence) GetState() JoinerState {
	if x != nil {
		return x.State
	}
	return JoinerState_NORMAL
}

func (x *Presence) GetMoodKeys() []string {
	if x != nil {
		return x.MoodKeys
	}
	return nil
}

func (x *Presence) GetIdleAnimationKey() string {
	if x != nil {
		return x.IdleAnimationKey
	}
	return ""
}

func (x *Presence) GetIsCalling() bool {
	if x != nil {
		return x.IsCalling
	}
	return false
}

func (x *Presence) GetAssets() map[string]string {
	if x != nil {
		return x.Assets
	}
	return nil
}

type ConnectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	Data  []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ConnectRequest) Reset() {
	*x = ConnectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_command_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectRequest) ProtoMessage() {}

func (x *ConnectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_command_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectRequest.ProtoReflect.Descriptor instead.
func (*ConnectRequest) Descriptor() ([]byte, []int) {
	return file_command_proto_rawDescGZIP(), []int{14}
}

func (x *ConnectRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *ConnectRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type ConnectResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ConnectResult) Reset() {
	*x = ConnectResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_command_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectResult) ProtoMessage() {}

func (x *ConnectResult) ProtoReflect() protoreflect.Message {
	mi := &file_command_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectResult.ProtoReflect.Descriptor instead.
func (*ConnectResult) Descriptor() ([]byte, []int) {
	return file_command_proto_rawDescGZIP(), []int{15}
}

type SubscribeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SubscribeRequest) Reset() {
	*x = SubscribeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_command_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeRequest) ProtoMessage() {}

func (x *SubscribeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_command_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeRequest.ProtoReflect.Descriptor instead.
func (*SubscribeRequest) Descriptor() ([]byte, []int) {
	return file_command_proto_rawDescGZIP(), []int{16}
}

type SubscribeResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info   *FeedInfo   `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
	Client *ClientInfo `protobuf:"bytes,2,opt,name=client,proto3" json:"client,omitempty"`
	Feed   *Feed       `protobuf:"bytes,3,opt,name=feed,proto3" json:"feed,omitempty"` // exist if error happened
}

func (x *SubscribeResult) Reset() {
	*x = SubscribeResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_command_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeResult) ProtoMessage() {}

func (x *SubscribeResult) ProtoReflect() protoreflect.Message {
	mi := &file_command_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeResult.ProtoReflect.Descriptor instead.
func (*SubscribeResult) Descriptor() ([]byte, []int) {
	return file_command_proto_rawDescGZIP(), []int{17}
}

func (x *SubscribeResult) GetInfo() *FeedInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *SubscribeResult) GetClient() *ClientInfo {
	if x != nil {
		return x.Client
	}
	return nil
}

func (x *SubscribeResult) GetFeed() *Feed {
	if x != nil {
		return x.Feed
	}
	return nil
}

type UnsubscribeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UnsubscribeRequest) Reset() {
	*x = UnsubscribeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_command_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnsubscribeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnsubscribeRequest) ProtoMessage() {}

func (x *UnsubscribeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_command_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnsubscribeRequest.ProtoReflect.Descriptor instead.
func (*UnsubscribeRequest) Descriptor() ([]byte, []int) {
	return file_command_proto_rawDescGZIP(), []int{18}
}

type UnsubscribeResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Feed *Feed       `protobuf:"bytes,1,opt,name=feed,proto3" json:"feed,omitempty"`
	Info *ClientInfo `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *UnsubscribeResult) Reset() {
	*x = UnsubscribeResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_command_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnsubscribeResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnsubscribeResult) ProtoMessage() {}

func (x *UnsubscribeResult) ProtoReflect() protoreflect.Message {
	mi := &file_command_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnsubscribeResult.ProtoReflect.Descriptor instead.
func (*UnsubscribeResult) Descriptor() ([]byte, []int) {
	return file_command_proto_rawDescGZIP(), []int{19}
}

func (x *UnsubscribeResult) GetFeed() *Feed {
	if x != nil {
		return x.Feed
	}
	return nil
}

func (x *UnsubscribeResult) GetInfo() *ClientInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type PublishRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp     int64      `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"` // in ms
	UnityData     [][]byte   `protobuf:"bytes,2,rep,name=unityData,proto3" json:"unityData,omitempty"`
	AudioData     *AudioData `protobuf:"bytes,3,opt,name=audioData,proto3" json:"audioData,omitempty"`
	AvatarCommand string     `protobuf:"bytes,4,opt,name=avatarCommand,proto3" json:"avatarCommand,omitempty"`
}

func (x *PublishRequest) Reset() {
	*x = PublishRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_command_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublishRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishRequest) ProtoMessage() {}

func (x *PublishRequest) ProtoReflect() protoreflect.Message {
	mi := &file_command_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishRequest.ProtoReflect.Descriptor instead.
func (*PublishRequest) Descriptor() ([]byte, []int) {
	return file_command_proto_rawDescGZIP(), []int{20}
}

func (x *PublishRequest) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *PublishRequest) GetUnityData() [][]byte {
	if x != nil {
		return x.UnityData
	}
	return nil
}

func (x *PublishRequest) GetAudioData() *AudioData {
	if x != nil {
		return x.AudioData
	}
	return nil
}

func (x *PublishRequest) GetAvatarCommand() string {
	if x != nil {
		return x.AvatarCommand
	}
	return ""
}

type PublishResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PublishResult) Reset() {
	*x = PublishResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_command_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublishResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishResult) ProtoMessage() {}

func (x *PublishResult) ProtoReflect() protoreflect.Message {
	mi := &file_command_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishResult.ProtoReflect.Descriptor instead.
func (*PublishResult) Descriptor() ([]byte, []int) {
	return file_command_proto_rawDescGZIP(), []int{21}
}

type JoinRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AvatarUrl                string   `protobuf:"bytes,1,opt,name=avatarUrl,proto3" json:"avatarUrl,omitempty"`
	AvatarBackgroundImageUrl string   `protobuf:"bytes,2,opt,name=avatarBackgroundImageUrl,proto3" json:"avatarBackgroundImageUrl,omitempty"`
	AvatarForegroundImageUrl string   `protobuf:"bytes,3,opt,name=avatarForegroundImageUrl,proto3" json:"avatarForegroundImageUrl,omitempty"`
	Metadata                 []byte   `protobuf:"bytes,4,opt,name=metadata,proto3" json:"metadata,omitempty"`
	MoodKeys                 []string `protobuf:"bytes,5,rep,name=moodKeys,proto3" json:"moodKeys,omitempty"`
	IdleAnimationKey         string   `protobuf:"bytes,6,opt,name=idleAnimationKey,proto3" json:"idleAnimationKey,omitempty"`
}

func (x *JoinRequest) Reset() {
	*x = JoinRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_command_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinRequest) ProtoMessage() {}

func (x *JoinRequest) ProtoReflect() protoreflect.Message {
	mi := &file_command_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinRequest.ProtoReflect.Descriptor instead.
func (*JoinRequest) Descriptor() ([]byte, []int) {
	return file_command_proto_rawDescGZIP(), []int{22}
}

func (x *JoinRequest) GetAvatarUrl() string {
	if x != nil {
		return x.AvatarUrl
	}
	return ""
}

func (x *JoinRequest) GetAvatarBackgroundImageUrl() string {
	if x != nil {
		return x.AvatarBackgroundImageUrl
	}
	return ""
}

func (x *JoinRequest) GetAvatarForegroundImageUrl() string {
	if x != nil {
		return x.AvatarForegroundImageUrl
	}
	return ""
}

func (x *JoinRequest) GetMetadata() []byte {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *JoinRequest) GetMoodKeys() []string {
	if x != nil {
		return x.MoodKeys
	}
	return nil
}

func (x *JoinRequest) GetIdleAnimationKey() string {
	if x != nil {
		return x.IdleAnimationKey
	}
	return ""
}

type JoinResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Feed     *Feed       `protobuf:"bytes,1,opt,name=feed,proto3" json:"feed,omitempty"`
	Info     *ClientInfo `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
	FeedInfo *FeedInfo   `protobuf:"bytes,3,opt,name=feedInfo,proto3" json:"feedInfo,omitempty"`
}

func (x *JoinResult) Reset() {
	*x = JoinResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_command_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinResult) ProtoMessage() {}

func (x *JoinResult) ProtoReflect() protoreflect.Message {
	mi := &file_command_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinResult.ProtoReflect.Descriptor instead.
func (*JoinResult) Descriptor() ([]byte, []int) {
	return file_command_proto_rawDescGZIP(), []int{23}
}

func (x *JoinResult) GetFeed() *Feed {
	if x != nil {
		return x.Feed
	}
	return nil
}

func (x *JoinResult) GetInfo() *ClientInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *JoinResult) GetFeedInfo() *FeedInfo {
	if x != nil {
		return x.FeedInfo
	}
	return nil
}

type LeaveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LeaveRequest) Reset() {
	*x = LeaveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_command_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeaveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaveRequest) ProtoMessage() {}

func (x *LeaveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_command_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaveRequest.ProtoReflect.Descriptor instead.
func (*LeaveRequest) Descriptor() ([]byte, []int) {
	return file_command_proto_rawDescGZIP(), []int{24}
}

type LeaveResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Feed *Feed       `protobuf:"bytes,1,opt,name=feed,proto3" json:"feed,omitempty"`
	Info *ClientInfo `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *LeaveResult) Reset() {
	*x = LeaveResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_command_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeaveResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaveResult) ProtoMessage() {}

func (x *LeaveResult) ProtoReflect() protoreflect.Message {
	mi := &file_command_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaveResult.ProtoReflect.Descriptor instead.
func (*LeaveResult) Descriptor() ([]byte, []int) {
	return file_command_proto_rawDescGZIP(), []int{25}
}

func (x *LeaveResult) GetFeed() *Feed {
	if x != nil {
		return x.Feed
	}
	return nil
}

func (x *LeaveResult) GetInfo() *ClientInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type DisconnectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DisconnectRequest) Reset() {
	*x = DisconnectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_command_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisconnectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisconnectRequest) ProtoMessage() {}

func (x *DisconnectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_command_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisconnectRequest.ProtoReflect.Descriptor instead.
func (*DisconnectRequest) Descriptor() ([]byte, []int) {
	return file_command_proto_rawDescGZIP(), []int{26}
}

type DisconnectResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DisconnectResult) Reset() {
	*x = DisconnectResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_command_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisconnectResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisconnectResult) ProtoMessage() {}

func (x *DisconnectResult) ProtoReflect() protoreflect.Message {
	mi := &file_command_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisconnectResult.ProtoReflect.Descriptor instead.
func (*DisconnectResult) Descriptor() ([]byte, []int) {
	return file_command_proto_rawDescGZIP(), []int{27}
}

type PingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PingRequest) Reset() {
	*x = PingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_command_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingRequest) ProtoMessage() {}

func (x *PingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_command_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingRequest.ProtoReflect.Descriptor instead.
func (*PingRequest) Descriptor() ([]byte, []int) {
	return file_command_proto_rawDescGZIP(), []int{28}
}

type PingResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PingResult) Reset() {
	*x = PingResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_command_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingResult) ProtoMessage() {}

func (x *PingResult) ProtoReflect() protoreflect.Message {
	mi := &file_command_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingResult.ProtoReflect.Descriptor instead.
func (*PingResult) Descriptor() ([]byte, []int) {
	return file_command_proto_rawDescGZIP(), []int{29}
}

type PresenceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AvatarUrl                string            `protobuf:"bytes,1,opt,name=avatarUrl,proto3" json:"avatarUrl,omitempty"`
	AvatarBackgroundImageUrl string            `protobuf:"bytes,2,opt,name=avatarBackgroundImageUrl,proto3" json:"avatarBackgroundImageUrl,omitempty"`
	AvatarForegroundImageUrl string            `protobuf:"bytes,3,opt,name=avatarForegroundImageUrl,proto3" json:"avatarForegroundImageUrl,omitempty"`
	Metadata                 []byte            `protobuf:"bytes,4,opt,name=metadata,proto3" json:"metadata,omitempty"`
	MoodKeys                 []string          `protobuf:"bytes,5,rep,name=moodKeys,proto3" json:"moodKeys,omitempty"`
	IdleAnimationKey         string            `protobuf:"bytes,6,opt,name=idleAnimationKey,proto3" json:"idleAnimationKey,omitempty"`
	IsCalling                bool              `protobuf:"varint,7,opt,name=isCalling,proto3" json:"isCalling,omitempty"`
	Assets                   map[string]string `protobuf:"bytes,8,rep,name=assets,proto3" json:"assets,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *PresenceRequest) Reset() {
	*x = PresenceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_command_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PresenceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PresenceRequest) ProtoMessage() {}

func (x *PresenceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_command_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PresenceRequest.ProtoReflect.Descriptor instead.
func (*PresenceRequest) Descriptor() ([]byte, []int) {
	return file_command_proto_rawDescGZIP(), []int{30}
}

func (x *PresenceRequest) GetAvatarUrl() string {
	if x != nil {
		return x.AvatarUrl
	}
	return ""
}

func (x *PresenceRequest) GetAvatarBackgroundImageUrl() string {
	if x != nil {
		return x.AvatarBackgroundImageUrl
	}
	return ""
}

func (x *PresenceRequest) GetAvatarForegroundImageUrl() string {
	if x != nil {
		return x.AvatarForegroundImageUrl
	}
	return ""
}

func (x *PresenceRequest) GetMetadata() []byte {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *PresenceRequest) GetMoodKeys() []string {
	if x != nil {
		return x.MoodKeys
	}
	return nil
}

func (x *PresenceRequest) GetIdleAnimationKey() string {
	if x != nil {
		return x.IdleAnimationKey
	}
	return ""
}

func (x *PresenceRequest) GetIsCalling() bool {
	if x != nil {
		return x.IsCalling
	}
	return false
}

func (x *PresenceRequest) GetAssets() map[string]string {
	if x != nil {
		return x.Assets
	}
	return nil
}

type PresenceResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PresenceResult) Reset() {
	*x = PresenceResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_command_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PresenceResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PresenceResult) ProtoMessage() {}

func (x *PresenceResult) ProtoReflect() protoreflect.Message {
	mi := &file_command_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PresenceResult.ProtoReflect.Descriptor instead.
func (*PresenceResult) Descriptor() ([]byte, []int) {
	return file_command_proto_rawDescGZIP(), []int{31}
}

type FeedInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *FeedInfoRequest) Reset() {
	*x = FeedInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_command_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FeedInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeedInfoRequest) ProtoMessage() {}

func (x *FeedInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_command_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeedInfoRequest.ProtoReflect.Descriptor instead.
func (*FeedInfoRequest) Descriptor() ([]byte, []int) {
	return file_command_proto_rawDescGZIP(), []int{32}
}

type FeedInfoResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *FeedInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *FeedInfoResult) Reset() {
	*x = FeedInfoResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_command_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FeedInfoResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeedInfoResult) ProtoMessage() {}

func (x *FeedInfoResult) ProtoReflect() protoreflect.Message {
	mi := &file_command_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeedInfoResult.ProtoReflect.Descriptor instead.
func (*FeedInfoResult) Descriptor() ([]byte, []int) {
	return file_command_proto_rawDescGZIP(), []int{33}
}

func (x *FeedInfoResult) GetInfo() *FeedInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type KickRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId uint32 `protobuf:"varint,1,opt,name=clientId,proto3" json:"clientId,omitempty"`
}

func (x *KickRequest) Reset() {
	*x = KickRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_command_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KickRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KickRequest) ProtoMessage() {}

func (x *KickRequest) ProtoReflect() protoreflect.Message {
	mi := &file_command_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KickRequest.ProtoReflect.Descriptor instead.
func (*KickRequest) Descriptor() ([]byte, []int) {
	return file_command_proto_rawDescGZIP(), []int{34}
}

func (x *KickRequest) GetClientId() uint32 {
	if x != nil {
		return x.ClientId
	}
	return 0
}

type KickResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *KickResult) Reset() {
	*x = KickResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_command_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KickResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KickResult) ProtoMessage() {}

func (x *KickResult) ProtoReflect() protoreflect.Message {
	mi := &file_command_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KickResult.ProtoReflect.Descriptor instead.
func (*KickResult) Descriptor() ([]byte, []int) {
	return file_command_proto_rawDescGZIP(), []int{35}
}

type ModeratorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId uint32      `protobuf:"varint,1,opt,name=clientId,proto3" json:"clientId,omitempty"`
	State    JoinerState `protobuf:"varint,2,opt,name=state,proto3,enum=JoinerState" json:"state,omitempty"`
}

func (x *ModeratorRequest) Reset() {
	*x = ModeratorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_command_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModeratorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModeratorRequest) ProtoMessage() {}

func (x *ModeratorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_command_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModeratorRequest.ProtoReflect.Descriptor instead.
func (*ModeratorRequest) Descriptor() ([]byte, []int) {
	return file_command_proto_rawDescGZIP(), []int{36}
}

func (x *ModeratorRequest) GetClientId() uint32 {
	if x != nil {
		return x.ClientId
	}
	return 0
}

func (x *ModeratorRequest) GetState() JoinerState {
	if x != nil {
		return x.State
	}
	return JoinerState_NORMAL
}

type ModeratorResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ModeratorResult) Reset() {
	*x = ModeratorResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_command_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModeratorResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModeratorResult) ProtoMessage() {}

func (x *ModeratorResult) ProtoReflect() protoreflect.Message {
	mi := &file_command_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModeratorResult.ProtoReflect.Descriptor instead.
func (*ModeratorResult) Descriptor() ([]byte, []int) {
	return file_command_proto_rawDescGZIP(), []int{37}
}

type Joiner struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AvatarUrl                string            `protobuf:"bytes,1,opt,name=avatarUrl,proto3" json:"avatarUrl,omitempty"`
	Info                     *ClientInfo       `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
	AvatarBackgroundImageUrl string            `protobuf:"bytes,3,opt,name=avatarBackgroundImageUrl,proto3" json:"avatarBackgroundImageUrl,omitempty"`
	AvatarForegroundImageUrl string            `protobuf:"bytes,4,opt,name=avatarForegroundImageUrl,proto3" json:"avatarForegroundImageUrl,omitempty"`
	Metadata                 []byte            `protobuf:"bytes,5,opt,name=metadata,proto3" json:"metadata,omitempty"`
	State                    JoinerState       `protobuf:"varint,6,opt,name=state,proto3,enum=JoinerState" json:"state,omitempty"`
	MoodKeys                 []string          `protobuf:"bytes,7,rep,name=moodKeys,proto3" json:"moodKeys,omitempty"`
	IdleAnimationKey         string            `protobuf:"bytes,8,opt,name=idleAnimationKey,proto3" json:"idleAnimationKey,omitempty"`
	IsCalling                bool              `protobuf:"varint,9,opt,name=isCalling,proto3" json:"isCalling,omitempty"`
	Assets                   map[string]string `protobuf:"bytes,10,rep,name=assets,proto3" json:"assets,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Joiner) Reset() {
	*x = Joiner{}
	if protoimpl.UnsafeEnabled {
		mi := &file_command_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Joiner) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Joiner) ProtoMessage() {}

func (x *Joiner) ProtoReflect() protoreflect.Message {
	mi := &file_command_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Joiner.ProtoReflect.Descriptor instead.
func (*Joiner) Descriptor() ([]byte, []int) {
	return file_command_proto_rawDescGZIP(), []int{38}
}

func (x *Joiner) GetAvatarUrl() string {
	if x != nil {
		return x.AvatarUrl
	}
	return ""
}

func (x *Joiner) GetInfo() *ClientInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *Joiner) GetAvatarBackgroundImageUrl() string {
	if x != nil {
		return x.AvatarBackgroundImageUrl
	}
	return ""
}

func (x *Joiner) GetAvatarForegroundImageUrl() string {
	if x != nil {
		return x.AvatarForegroundImageUrl
	}
	return ""
}

func (x *Joiner) GetMetadata() []byte {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Joiner) GetState() JoinerState {
	if x != nil {
		return x.State
	}
	return JoinerState_NORMAL
}

func (x *Joiner) GetMoodKeys() []string {
	if x != nil {
		return x.MoodKeys
	}
	return nil
}

func (x *Joiner) GetIdleAnimationKey() string {
	if x != nil {
		return x.IdleAnimationKey
	}
	return ""
}

func (x *Joiner) GetIsCalling() bool {
	if x != nil {
		return x.IsCalling
	}
	return false
}

func (x *Joiner) GetAssets() map[string]string {
	if x != nil {
		return x.Assets
	}
	return nil
}

type FeedInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Feed *Feed `protobuf:"bytes,1,opt,name=feed,proto3" json:"feed,omitempty"`
	// clientId -> joiner
	Joiners map[uint32]*Joiner `protobuf:"bytes,2,rep,name=joiners,proto3" json:"joiners,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *FeedInfo) Reset() {
	*x = FeedInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_command_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FeedInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeedInfo) ProtoMessage() {}

func (x *FeedInfo) ProtoReflect() protoreflect.Message {
	mi := &file_command_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeedInfo.ProtoReflect.Descriptor instead.
func (*FeedInfo) Descriptor() ([]byte, []int) {
	return file_command_proto_rawDescGZIP(), []int{39}
}

func (x *FeedInfo) GetFeed() *Feed {
	if x != nil {
		return x.Feed
	}
	return nil
}

func (x *FeedInfo) GetJoiners() map[uint32]*Joiner {
	if x != nil {
		return x.Joiners
	}
	return nil
}

var File_command_proto protoreflect.FileDescriptor

var file_command_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xa1, 0x03, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x24, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x65, 0x6d,
	0x70, 0x6f, 0x72, 0x61, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x74, 0x65,
	0x6d, 0x70, 0x6f, 0x72, 0x61, 0x72, 0x79, 0x22, 0xb9, 0x02, 0x0a, 0x09, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x0e, 0x46, 0x45, 0x45, 0x44, 0x5f, 0x4e, 0x4f,
	0x54, 0x5f, 0x45, 0x58, 0x49, 0x53, 0x54, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x57, 0x52, 0x4f,
	0x4e, 0x47, 0x5f, 0x46, 0x45, 0x45, 0x44, 0x5f, 0x49, 0x4e, 0x53, 0x54, 0x41, 0x4e, 0x43, 0x45,
	0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x45, 0x10, 0x03, 0x12, 0x19, 0x0a, 0x15, 0x41, 0x4c, 0x52, 0x45, 0x41, 0x44, 0x59,
	0x5f, 0x49, 0x4e, 0x5f, 0x4f, 0x54, 0x48, 0x45, 0x52, 0x5f, 0x46, 0x45, 0x45, 0x44, 0x10, 0x04,
	0x12, 0x13, 0x0a, 0x0f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x43, 0x4f, 0x4d, 0x4d,
	0x41, 0x4e, 0x44, 0x10, 0x05, 0x12, 0x15, 0x0a, 0x11, 0x4e, 0x4f, 0x54, 0x5f, 0x53, 0x55, 0x50,
	0x50, 0x4f, 0x52, 0x54, 0x45, 0x44, 0x5f, 0x59, 0x45, 0x54, 0x10, 0x06, 0x12, 0x0f, 0x0a, 0x0b,
	0x50, 0x52, 0x4f, 0x58, 0x59, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x07, 0x12, 0x16, 0x0a,
	0x12, 0x46, 0x45, 0x45, 0x44, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x5f, 0x44, 0x42, 0x5f, 0x45, 0x52,
	0x52, 0x4f, 0x52, 0x10, 0x08, 0x12, 0x10, 0x0a, 0x0c, 0x55, 0x4e, 0x41, 0x55, 0x54, 0x48, 0x4f,
	0x52, 0x49, 0x5a, 0x45, 0x44, 0x10, 0x09, 0x12, 0x17, 0x0a, 0x13, 0x4e, 0x4f, 0x54, 0x5f, 0x53,
	0x55, 0x42, 0x53, 0x43, 0x52, 0x49, 0x42, 0x45, 0x44, 0x5f, 0x46, 0x45, 0x45, 0x44, 0x10, 0x0a,
	0x12, 0x12, 0x0a, 0x0e, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4e, 0x47, 0x5f, 0x46, 0x49, 0x45, 0x4c,
	0x44, 0x53, 0x10, 0x0b, 0x12, 0x11, 0x0a, 0x0d, 0x4e, 0x4f, 0x54, 0x5f, 0x4a, 0x4f, 0x49, 0x4e,
	0x5f, 0x46, 0x45, 0x45, 0x44, 0x10, 0x0c, 0x12, 0x15, 0x0a, 0x11, 0x49, 0x4e, 0x54, 0x45, 0x52,
	0x4e, 0x4f, 0x44, 0x45, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x4f, 0x55, 0x54, 0x10, 0x0d, 0x12, 0x13,
	0x0a, 0x0f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x4f, 0x55,
	0x54, 0x10, 0x0e, 0x22, 0x46, 0x0a, 0x04, 0x46, 0x65, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0xaa, 0x06, 0x0a, 0x07,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2b, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x2e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x06, 0x6d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x12, 0x19, 0x0a, 0x04, 0x66, 0x65, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x05, 0x2e, 0x46, 0x65, 0x65, 0x64, 0x52, 0x04, 0x66, 0x65, 0x65, 0x64, 0x12,
	0x29, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x12, 0x2f, 0x0a, 0x09, 0x73, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x52, 0x09, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x35, 0x0a, 0x0b, 0x75,
	0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0b, 0x75, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x12, 0x29, 0x0a, 0x07, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x52, 0x07, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x12, 0x20, 0x0a,
	0x04, 0x6a, 0x6f, 0x69, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x4a, 0x6f,
	0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04, 0x6a, 0x6f, 0x69, 0x6e, 0x12,
	0x23, 0x0a, 0x05, 0x6c, 0x65, 0x61, 0x76, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x05, 0x6c,
	0x65, 0x61, 0x76, 0x65, 0x12, 0x32, 0x0a, 0x0a, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0a, 0x64, 0x69,
	0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x12, 0x20, 0x0a, 0x04, 0x70, 0x69, 0x6e, 0x67,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x52, 0x04, 0x70, 0x69, 0x6e, 0x67, 0x12, 0x2c, 0x0a, 0x08, 0x70, 0x72,
	0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x50,
	0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x08,
	0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x2c, 0x0a, 0x08, 0x66, 0x65, 0x65, 0x64,
	0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x46, 0x65, 0x65,
	0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x08, 0x66, 0x65,
	0x65, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x20, 0x0a, 0x04, 0x6b, 0x69, 0x63, 0x6b, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x4b, 0x69, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x52, 0x04, 0x6b, 0x69, 0x63, 0x6b, 0x12, 0x2f, 0x0a, 0x09, 0x6d, 0x6f, 0x64, 0x65,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4d, 0x6f,
	0x64, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x09,
	0x6d, 0x6f, 0x64, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x22, 0xbc, 0x01, 0x0a, 0x0a, 0x4d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x43, 0x4f, 0x4e, 0x4e,
	0x45, 0x43, 0x54, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x53, 0x55, 0x42, 0x53, 0x43, 0x52, 0x49,
	0x42, 0x45, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x4e, 0x53, 0x55, 0x42, 0x53, 0x43, 0x52,
	0x49, 0x42, 0x45, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x55, 0x42, 0x4c, 0x49, 0x53, 0x48,
	0x10, 0x03, 0x12, 0x08, 0x0a, 0x04, 0x4a, 0x4f, 0x49, 0x4e, 0x10, 0x04, 0x12, 0x09, 0x0a, 0x05,
	0x4c, 0x45, 0x41, 0x56, 0x45, 0x10, 0x05, 0x12, 0x08, 0x0a, 0x04, 0x50, 0x49, 0x4e, 0x47, 0x10,
	0x06, 0x12, 0x0c, 0x0a, 0x08, 0x50, 0x52, 0x45, 0x53, 0x45, 0x4e, 0x43, 0x45, 0x10, 0x07, 0x12,
	0x0d, 0x0a, 0x09, 0x46, 0x45, 0x45, 0x44, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x10, 0x08, 0x12, 0x0e,
	0x0a, 0x0a, 0x44, 0x49, 0x53, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x10, 0x09, 0x12, 0x0f,
	0x0a, 0x0b, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x5f, 0x46, 0x45, 0x45, 0x44, 0x10, 0x0a, 0x12,
	0x08, 0x0a, 0x04, 0x4b, 0x49, 0x43, 0x4b, 0x10, 0x0b, 0x12, 0x0d, 0x0a, 0x09, 0x4d, 0x4f, 0x44,
	0x45, 0x52, 0x41, 0x54, 0x4f, 0x52, 0x10, 0x0c, 0x22, 0xce, 0x04, 0x0a, 0x05, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x1c, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x06, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x19, 0x0a, 0x04, 0x70, 0x75, 0x73, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05,
	0x2e, 0x50, 0x75, 0x73, 0x68, 0x52, 0x04, 0x70, 0x75, 0x73, 0x68, 0x12, 0x28, 0x0a, 0x07, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x07, 0x63, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x12, 0x2e, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x09, 0x73, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x34, 0x0a, 0x0b, 0x75, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x55, 0x6e, 0x73,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x0b,
	0x75, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x28, 0x0a, 0x07, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x50,
	0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x07, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x73, 0x68, 0x12, 0x1f, 0x0a, 0x04, 0x6a, 0x6f, 0x69, 0x6e, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x52, 0x04, 0x6a, 0x6f, 0x69, 0x6e, 0x12, 0x22, 0x0a, 0x05, 0x6c, 0x65, 0x61, 0x76, 0x65, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x52, 0x05, 0x6c, 0x65, 0x61, 0x76, 0x65, 0x12, 0x31, 0x0a, 0x0a, 0x64, 0x69,
	0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x52, 0x0a, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x12, 0x1f, 0x0a,
	0x04, 0x70, 0x69, 0x6e, 0x67, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x50, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x04, 0x70, 0x69, 0x6e, 0x67, 0x12, 0x2b,
	0x0a, 0x08, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x50, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x52, 0x08, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x2b, 0x0a, 0x08, 0x66,
	0x65, 0x65, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x46, 0x65, 0x65, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x08,
	0x66, 0x65, 0x65, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1f, 0x0a, 0x04, 0x6b, 0x69, 0x63, 0x6b,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x4b, 0x69, 0x63, 0x6b, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x52, 0x04, 0x6b, 0x69, 0x63, 0x6b, 0x12, 0x2e, 0x0a, 0x09, 0x6d, 0x6f, 0x64,
	0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x4d,
	0x6f, 0x64, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x09,
	0x6d, 0x6f, 0x64, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x22, 0xaa, 0x02, 0x0a, 0x04, 0x50, 0x75,
	0x73, 0x68, 0x12, 0x22, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x0e, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x04, 0x66, 0x65, 0x65, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x46, 0x65, 0x65, 0x64, 0x52, 0x04, 0x66, 0x65, 0x65,
	0x64, 0x12, 0x1e, 0x0a, 0x03, 0x70, 0x75, 0x62, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x03, 0x70, 0x75,
	0x62, 0x12, 0x19, 0x0a, 0x04, 0x6a, 0x6f, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x05, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x04, 0x6a, 0x6f, 0x69, 0x6e, 0x12, 0x1c, 0x0a, 0x05,
	0x6c, 0x65, 0x61, 0x76, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x4c, 0x65,
	0x61, 0x76, 0x65, 0x52, 0x05, 0x6c, 0x65, 0x61, 0x76, 0x65, 0x12, 0x25, 0x0a, 0x08, 0x70, 0x72,
	0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x50,
	0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x08, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63,
	0x65, 0x22, 0x63, 0x0a, 0x08, 0x50, 0x75, 0x73, 0x68, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0f, 0x0a,
	0x0b, 0x50, 0x55, 0x42, 0x4c, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x00, 0x12, 0x08,
	0x0a, 0x04, 0x4a, 0x4f, 0x49, 0x4e, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x4c, 0x45, 0x41, 0x56,
	0x45, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x55, 0x42, 0x53, 0x43, 0x52, 0x49, 0x42, 0x45,
	0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x50, 0x52, 0x45, 0x53,
	0x45, 0x4e, 0x43, 0x45, 0x10, 0x04, 0x12, 0x0e, 0x0a, 0x0a, 0x46, 0x45, 0x45, 0x44, 0x5f, 0x45,
	0x52, 0x52, 0x4f, 0x52, 0x10, 0x05, 0x22, 0x74, 0x0a, 0x0a, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x73, 0x42, 0x6f, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x42, 0x6f, 0x74, 0x22, 0x6d, 0x0a, 0x09,
	0x41, 0x75, 0x64, 0x69, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x12, 0x26, 0x0a, 0x05, 0x63, 0x6f, 0x64,
	0x65, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x6f,
	0x44, 0x61, 0x74, 0x61, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x63, 0x52, 0x05, 0x63, 0x6f, 0x64, 0x65,
	0x63, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0c, 0x52, 0x09, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x22,
	0x1a, 0x0a, 0x05, 0x43, 0x6f, 0x64, 0x65, 0x63, 0x12, 0x08, 0x0a, 0x04, 0x4f, 0x50, 0x55, 0x53,
	0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x41, 0x43, 0x10, 0x01, 0x22, 0xba, 0x01, 0x0a, 0x0b,
	0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x6e, 0x69,
	0x74, 0x79, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x09, 0x75, 0x6e,
	0x69, 0x74, 0x79, 0x44, 0x61, 0x74, 0x61, 0x12, 0x28, 0x0a, 0x09, 0x61, 0x75, 0x64, 0x69, 0x6f,
	0x44, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x41, 0x75, 0x64,
	0x69, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x52, 0x09, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x1f, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0b, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e,
	0x66, 0x6f, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x43, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x22, 0x4e, 0x0a, 0x04, 0x4a, 0x6f, 0x69, 0x6e,
	0x12, 0x1f, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b,
	0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66,
	0x6f, 0x12, 0x25, 0x0a, 0x08, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x50, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x08,
	0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x22, 0x28, 0x0a, 0x05, 0x4c, 0x65, 0x61, 0x76,
	0x65, 0x12, 0x1f, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0b, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e,
	0x66, 0x6f, 0x22, 0x39, 0x0a, 0x0b, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0x0b, 0x0a,
	0x09, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x22, 0x1d, 0x0a, 0x07, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xd1, 0x03, 0x0a, 0x08, 0x50, 0x72,
	0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x1f, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x55, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x55, 0x72, 0x6c, 0x12, 0x3a, 0x0a, 0x18, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x42,
	0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72,
	0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x18, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x42,
	0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72,
	0x6c, 0x12, 0x3a, 0x0a, 0x18, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x46, 0x6f, 0x72, 0x65, 0x67,
	0x72, 0x6f, 0x75, 0x6e, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x18, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x46, 0x6f, 0x72, 0x65, 0x67,
	0x72, 0x6f, 0x75, 0x6e, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x1a, 0x0a,
	0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x22, 0x0a, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x65,
	0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x6d, 0x6f, 0x6f, 0x64, 0x4b, 0x65, 0x79, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x08, 0x6d, 0x6f, 0x6f, 0x64, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x69, 0x64, 0x6c,
	0x65, 0x41, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x10, 0x69, 0x64, 0x6c, 0x65, 0x41, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x43, 0x61, 0x6c, 0x6c, 0x69,
	0x6e, 0x67, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x43, 0x61, 0x6c, 0x6c,
	0x69, 0x6e, 0x67, 0x12, 0x2d, 0x0a, 0x06, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x18, 0x0a, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x50, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x41,
	0x73, 0x73, 0x65, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x61, 0x73, 0x73, 0x65,
	0x74, 0x73, 0x1a, 0x39, 0x0a, 0x0b, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x3a, 0x0a,
	0x0e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x0f, 0x0a, 0x0d, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x12, 0x0a, 0x10, 0x53, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x70,
	0x0a, 0x0f, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x12, 0x1d, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x09, 0x2e, 0x46, 0x65, 0x65, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f,
	0x12, 0x23, 0x0a, 0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0b, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x04, 0x66, 0x65, 0x65, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x46, 0x65, 0x65, 0x64, 0x52, 0x04, 0x66, 0x65, 0x65, 0x64,
	0x22, 0x14, 0x0a, 0x12, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x4f, 0x0a, 0x11, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x19, 0x0a, 0x04, 0x66,
	0x65, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x46, 0x65, 0x65, 0x64,
	0x52, 0x04, 0x66, 0x65, 0x65, 0x64, 0x12, 0x1f, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x9c, 0x01, 0x0a, 0x0e, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x73, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x6e, 0x69, 0x74,
	0x79, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x09, 0x75, 0x6e, 0x69,
	0x74, 0x79, 0x44, 0x61, 0x74, 0x61, 0x12, 0x28, 0x0a, 0x09, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x44,
	0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x41, 0x75, 0x64, 0x69,
	0x6f, 0x44, 0x61, 0x74, 0x61, 0x52, 0x09, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x24, 0x0a, 0x0d, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x43,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x22, 0x0f, 0x0a, 0x0d, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73,
	0x68, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x87, 0x02, 0x0a, 0x0b, 0x4a, 0x6f, 0x69, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x55, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x55, 0x72, 0x6c, 0x12, 0x3a, 0x0a, 0x18, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x42,
	0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x18, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x42,
	0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72,
	0x6c, 0x12, 0x3a, 0x0a, 0x18, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x46, 0x6f, 0x72, 0x65, 0x67,
	0x72, 0x6f, 0x75, 0x6e, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x18, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x46, 0x6f, 0x72, 0x65, 0x67,
	0x72, 0x6f, 0x75, 0x6e, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x1a, 0x0a,
	0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x6f, 0x6f,
	0x64, 0x4b, 0x65, 0x79, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x6f, 0x6f,
	0x64, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x69, 0x64, 0x6c, 0x65, 0x41, 0x6e, 0x69,
	0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x10, 0x69, 0x64, 0x6c, 0x65, 0x41, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65,
	0x79, 0x22, 0x6f, 0x0a, 0x0a, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12,
	0x19, 0x0a, 0x04, 0x66, 0x65, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e,
	0x46, 0x65, 0x65, 0x64, 0x52, 0x04, 0x66, 0x65, 0x65, 0x64, 0x12, 0x1f, 0x0a, 0x04, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x25, 0x0a, 0x08, 0x66,
	0x65, 0x65, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e,
	0x46, 0x65, 0x65, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x66, 0x65, 0x65, 0x64, 0x49, 0x6e,
	0x66, 0x6f, 0x22, 0x0e, 0x0a, 0x0c, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x49, 0x0a, 0x0b, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x12, 0x19, 0x0a, 0x04, 0x66, 0x65, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x05, 0x2e, 0x46, 0x65, 0x65, 0x64, 0x52, 0x04, 0x66, 0x65, 0x65, 0x64, 0x12, 0x1f, 0x0a, 0x04,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x13, 0x0a,
	0x11, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x12, 0x0a, 0x10, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x0d, 0x0a, 0x0b, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x0c, 0x0a, 0x0a, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x22, 0x9a, 0x03, 0x0a, 0x0f, 0x50, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x55, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x55, 0x72, 0x6c, 0x12, 0x3a, 0x0a, 0x18, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x42,
	0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x18, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x42,
	0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72,
	0x6c, 0x12, 0x3a, 0x0a, 0x18, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x46, 0x6f, 0x72, 0x65, 0x67,
	0x72, 0x6f, 0x75, 0x6e, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x18, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x46, 0x6f, 0x72, 0x65, 0x67,
	0x72, 0x6f, 0x75, 0x6e, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x1a, 0x0a,
	0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x6f, 0x6f,
	0x64, 0x4b, 0x65, 0x79, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x6f, 0x6f,
	0x64, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x69, 0x64, 0x6c, 0x65, 0x41, 0x6e, 0x69,
	0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x10, 0x69, 0x64, 0x6c, 0x65, 0x41, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65,
	0x79, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x43, 0x61, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x43, 0x61, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x12,
	0x34, 0x0a, 0x06, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x50, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x61,
	0x73, 0x73, 0x65, 0x74, 0x73, 0x1a, 0x39, 0x0a, 0x0b, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0x10, 0x0a, 0x0e, 0x50, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x22, 0x11, 0x0a, 0x0f, 0x46, 0x65, 0x65, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x2f, 0x0a, 0x0e, 0x46, 0x65, 0x65, 0x64, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1d, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x46, 0x65, 0x65, 0x64, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x29, 0x0a, 0x0b, 0x4b, 0x69, 0x63, 0x6b, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x22, 0x0c, 0x0a, 0x0a, 0x4b, 0x69, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22,
	0x52, 0x0a, 0x10, 0x4d, 0x6f, 0x64, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x22, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c,
	0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x22, 0x11, 0x0a, 0x0f, 0x4d, 0x6f, 0x64, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xcd, 0x03, 0x0a, 0x06, 0x4a, 0x6f, 0x69, 0x6e, 0x65,
	0x72, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x55, 0x72, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x55, 0x72, 0x6c, 0x12,
	0x1f, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f,
	0x12, 0x3a, 0x0a, 0x18, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x42, 0x61, 0x63, 0x6b, 0x67, 0x72,
	0x6f, 0x75, 0x6e, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x18, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x42, 0x61, 0x63, 0x6b, 0x67, 0x72,
	0x6f, 0x75, 0x6e, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x3a, 0x0a, 0x18,
	0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x46, 0x6f, 0x72, 0x65, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x18,
	0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x46, 0x6f, 0x72, 0x65, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x12, 0x22, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x6f, 0x6f, 0x64,
	0x4b, 0x65, 0x79, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x6f, 0x6f, 0x64,
	0x4b, 0x65, 0x79, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x69, 0x64, 0x6c, 0x65, 0x41, 0x6e, 0x69, 0x6d,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10,
	0x69, 0x64, 0x6c, 0x65, 0x41, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79,
	0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x43, 0x61, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x43, 0x61, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x12, 0x2b,
	0x0a, 0x06, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x65, 0x72, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x06, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x1a, 0x39, 0x0a, 0x0b, 0x41,
	0x73, 0x73, 0x65, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x9c, 0x01, 0x0a, 0x08, 0x46, 0x65, 0x65, 0x64, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x19, 0x0a, 0x04, 0x66, 0x65, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x05, 0x2e, 0x46, 0x65, 0x65, 0x64, 0x52, 0x04, 0x66, 0x65, 0x65, 0x64, 0x12, 0x30,
	0x0a, 0x07, 0x6a, 0x6f, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x46, 0x65, 0x65, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x65,
	0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x6a, 0x6f, 0x69, 0x6e, 0x65, 0x72, 0x73,
	0x1a, 0x43, 0x0a, 0x0c, 0x4a, 0x6f, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x07, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x2a, 0x2d, 0x0a, 0x0b, 0x4a, 0x6f, 0x69, 0x6e, 0x65, 0x72, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x4e, 0x4f, 0x52, 0x4d, 0x41, 0x4c, 0x10, 0x00,
	0x12, 0x08, 0x0a, 0x04, 0x4d, 0x55, 0x54, 0x45, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x4b, 0x49,
	0x43, 0x4b, 0x10, 0x02, 0x42, 0x0d, 0x5a, 0x0b, 0x2e, 0x2f, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_command_proto_rawDescOnce sync.Once
	file_command_proto_rawDescData = file_command_proto_rawDesc
)

func file_command_proto_rawDescGZIP() []byte {
	file_command_proto_rawDescOnce.Do(func() {
		file_command_proto_rawDescData = protoimpl.X.CompressGZIP(file_command_proto_rawDescData)
	})
	return file_command_proto_rawDescData
}

var file_command_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_command_proto_msgTypes = make([]protoimpl.MessageInfo, 44)
var file_command_proto_goTypes = []interface{}{
	(JoinerState)(0),           // 0: JoinerState
	(Error_ErrorCode)(0),       // 1: Error.ErrorCode
	(Command_MethodType)(0),    // 2: Command.MethodType
	(Push_PushType)(0),         // 3: Push.PushType
	(AudioData_Codec)(0),       // 4: AudioData.Codec
	(*Error)(nil),              // 5: Error
	(*Feed)(nil),               // 6: Feed
	(*Command)(nil),            // 7: Command
	(*Reply)(nil),              // 8: Reply
	(*Push)(nil),               // 9: Push
	(*ClientInfo)(nil),         // 10: ClientInfo
	(*AudioData)(nil),          // 11: AudioData
	(*Publication)(nil),        // 12: Publication
	(*Join)(nil),               // 13: Join
	(*Leave)(nil),              // 14: Leave
	(*Unsubscribe)(nil),        // 15: Unsubscribe
	(*Subscribe)(nil),          // 16: Subscribe
	(*Message)(nil),            // 17: Message
	(*Presence)(nil),           // 18: Presence
	(*ConnectRequest)(nil),     // 19: ConnectRequest
	(*ConnectResult)(nil),      // 20: ConnectResult
	(*SubscribeRequest)(nil),   // 21: SubscribeRequest
	(*SubscribeResult)(nil),    // 22: SubscribeResult
	(*UnsubscribeRequest)(nil), // 23: UnsubscribeRequest
	(*UnsubscribeResult)(nil),  // 24: UnsubscribeResult
	(*PublishRequest)(nil),     // 25: PublishRequest
	(*PublishResult)(nil),      // 26: PublishResult
	(*JoinRequest)(nil),        // 27: JoinRequest
	(*JoinResult)(nil),         // 28: JoinResult
	(*LeaveRequest)(nil),       // 29: LeaveRequest
	(*LeaveResult)(nil),        // 30: LeaveResult
	(*DisconnectRequest)(nil),  // 31: DisconnectRequest
	(*DisconnectResult)(nil),   // 32: DisconnectResult
	(*PingRequest)(nil),        // 33: PingRequest
	(*PingResult)(nil),         // 34: PingResult
	(*PresenceRequest)(nil),    // 35: PresenceRequest
	(*PresenceResult)(nil),     // 36: PresenceResult
	(*FeedInfoRequest)(nil),    // 37: FeedInfoRequest
	(*FeedInfoResult)(nil),     // 38: FeedInfoResult
	(*KickRequest)(nil),        // 39: KickRequest
	(*KickResult)(nil),         // 40: KickResult
	(*ModeratorRequest)(nil),   // 41: ModeratorRequest
	(*ModeratorResult)(nil),    // 42: ModeratorResult
	(*Joiner)(nil),             // 43: Joiner
	(*FeedInfo)(nil),           // 44: FeedInfo
	nil,                        // 45: Presence.AssetsEntry
	nil,                        // 46: PresenceRequest.AssetsEntry
	nil,                        // 47: Joiner.AssetsEntry
	nil,                        // 48: FeedInfo.JoinersEntry
}
var file_command_proto_depIdxs = []int32{
	1,  // 0: Error.code:type_name -> Error.ErrorCode
	2,  // 1: Command.method:type_name -> Command.MethodType
	6,  // 2: Command.feed:type_name -> Feed
	19, // 3: Command.connect:type_name -> ConnectRequest
	21, // 4: Command.subscribe:type_name -> SubscribeRequest
	23, // 5: Command.unsubscribe:type_name -> UnsubscribeRequest
	25, // 6: Command.publish:type_name -> PublishRequest
	27, // 7: Command.join:type_name -> JoinRequest
	29, // 8: Command.leave:type_name -> LeaveRequest
	31, // 9: Command.disconnect:type_name -> DisconnectRequest
	33, // 10: Command.ping:type_name -> PingRequest
	35, // 11: Command.presence:type_name -> PresenceRequest
	37, // 12: Command.feedInfo:type_name -> FeedInfoRequest
	39, // 13: Command.kick:type_name -> KickRequest
	41, // 14: Command.moderator:type_name -> ModeratorRequest
	5,  // 15: Reply.error:type_name -> Error
	9,  // 16: Reply.push:type_name -> Push
	20, // 17: Reply.connect:type_name -> ConnectResult
	22, // 18: Reply.subscribe:type_name -> SubscribeResult
	24, // 19: Reply.unsubscribe:type_name -> UnsubscribeResult
	26, // 20: Reply.publish:type_name -> PublishResult
	28, // 21: Reply.join:type_name -> JoinResult
	30, // 22: Reply.leave:type_name -> LeaveResult
	32, // 23: Reply.disconnect:type_name -> DisconnectResult
	34, // 24: Reply.ping:type_name -> PingResult
	36, // 25: Reply.presence:type_name -> PresenceResult
	38, // 26: Reply.feedInfo:type_name -> FeedInfoResult
	40, // 27: Reply.kick:type_name -> KickResult
	42, // 28: Reply.moderator:type_name -> ModeratorResult
	3,  // 29: Push.type:type_name -> Push.PushType
	6,  // 30: Push.feed:type_name -> Feed
	12, // 31: Push.pub:type_name -> Publication
	13, // 32: Push.join:type_name -> Join
	14, // 33: Push.leave:type_name -> Leave
	18, // 34: Push.presence:type_name -> Presence
	4,  // 35: AudioData.codec:type_name -> AudioData.Codec
	11, // 36: Publication.audioData:type_name -> AudioData
	10, // 37: Publication.info:type_name -> ClientInfo
	10, // 38: Join.info:type_name -> ClientInfo
	18, // 39: Join.presence:type_name -> Presence
	10, // 40: Leave.info:type_name -> ClientInfo
	10, // 41: Presence.info:type_name -> ClientInfo
	0,  // 42: Presence.state:type_name -> JoinerState
	45, // 43: Presence.assets:type_name -> Presence.AssetsEntry
	44, // 44: SubscribeResult.info:type_name -> FeedInfo
	10, // 45: SubscribeResult.client:type_name -> ClientInfo
	6,  // 46: SubscribeResult.feed:type_name -> Feed
	6,  // 47: UnsubscribeResult.feed:type_name -> Feed
	10, // 48: UnsubscribeResult.info:type_name -> ClientInfo
	11, // 49: PublishRequest.audioData:type_name -> AudioData
	6,  // 50: JoinResult.feed:type_name -> Feed
	10, // 51: JoinResult.info:type_name -> ClientInfo
	44, // 52: JoinResult.feedInfo:type_name -> FeedInfo
	6,  // 53: LeaveResult.feed:type_name -> Feed
	10, // 54: LeaveResult.info:type_name -> ClientInfo
	46, // 55: PresenceRequest.assets:type_name -> PresenceRequest.AssetsEntry
	44, // 56: FeedInfoResult.info:type_name -> FeedInfo
	0,  // 57: ModeratorRequest.state:type_name -> JoinerState
	10, // 58: Joiner.info:type_name -> ClientInfo
	0,  // 59: Joiner.state:type_name -> JoinerState
	47, // 60: Joiner.assets:type_name -> Joiner.AssetsEntry
	6,  // 61: FeedInfo.feed:type_name -> Feed
	48, // 62: FeedInfo.joiners:type_name -> FeedInfo.JoinersEntry
	43, // 63: FeedInfo.JoinersEntry.value:type_name -> Joiner
	64, // [64:64] is the sub-list for method output_type
	64, // [64:64] is the sub-list for method input_type
	64, // [64:64] is the sub-list for extension type_name
	64, // [64:64] is the sub-list for extension extendee
	0,  // [0:64] is the sub-list for field type_name
}

func init() { file_command_proto_init() }
func file_command_proto_init() {
	if File_command_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_command_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Error); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_command_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Feed); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_command_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Command); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_command_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Reply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_command_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Push); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_command_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_command_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AudioData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_command_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Publication); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_command_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Join); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_command_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Leave); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_command_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Unsubscribe); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_command_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Subscribe); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_command_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_command_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Presence); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_command_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_command_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_command_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_command_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_command_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnsubscribeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_command_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnsubscribeResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_command_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublishRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_command_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublishResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_command_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_command_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_command_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LeaveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_command_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LeaveResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_command_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DisconnectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_command_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DisconnectResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_command_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_command_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PingResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_command_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PresenceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_command_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PresenceResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_command_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FeedInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_command_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FeedInfoResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_command_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KickRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_command_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KickResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_command_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModeratorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_command_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModeratorResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_command_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Joiner); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_command_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FeedInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_command_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   44,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_command_proto_goTypes,
		DependencyIndexes: file_command_proto_depIdxs,
		EnumInfos:         file_command_proto_enumTypes,
		MessageInfos:      file_command_proto_msgTypes,
	}.Build()
	File_command_proto = out.File
	file_command_proto_rawDesc = nil
	file_command_proto_goTypes = nil
	file_command_proto_depIdxs = nil
}
